{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","isclicked","onClick","removeFriend","alt","name","src","Wrapper","children","Title","id","shuffle","require","App","state","yugiohs","currentScore","highScore","event","pickedcard","currentTarget","status","JSON","parse","getAttribute","allcards","document","querySelectorAll","console","log","_this","setState","i","length","setAttribute","_this2","this","friends","map","yugioh","components_FriendCard","bind","key","image","components_Wrapper","components_Title","Component","ReactDOM","render","src_App","getElementById"],"mappings":"grEAceA,MAXf,SAAoBC,GAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,UAAU,QAAQC,QAASN,EAAMO,cACrDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMS,KAAMC,IAAKV,EAAMU,OAEnCT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBCFNO,MAJf,SAAiBX,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMY,iBCS1BC,MAVf,SAAeb,GACb,OACEC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UAAhB,uBACAH,EAAAC,EAAAC,cAAA,OAAKW,GAAG,WAAR,4DCAFC,EAAUC,EAAQ,IAiEPC,6MA7DbC,MAAQ,CACNC,UACAC,aAAc,EACdC,UAAW,KAIbd,aAAe,SAAAe,GACb,IAAIC,EAAaD,EAAME,cACnBC,EAASC,KAAKC,MAAMJ,EAAWK,aAAa,cAG1CC,EAAWC,SAASC,iBAAiB,SAI3C,GAHAC,QAAQC,IAAIJ,IAGG,IAAXJ,EAAiB,CACnBS,EAAKC,SAAS,CAAEf,aAAc,IAC1Bc,EAAKhB,MAAME,aAAec,EAAKhB,MAAMG,WACvCa,EAAKC,SAAS,CAAEd,UAAWa,EAAKhB,MAAME,eAIxC,IAAK,IAAIgB,EAAI,EAAGA,EAAIP,EAASQ,OAAQD,IACnCP,EAASO,GAAGE,aAAa,YAAa,cAKxCJ,EAAKC,SAAS,CAAEf,aAAcc,EAAKhB,MAAME,aAAe,IACxDG,EAAWe,aAAa,YAAa,iFAKhC,IAAAC,EAAAC,KACDC,EAAUD,KAAKtB,MAAMC,QAAQuB,IAAI,SAAAC,GAAM,OAC3C1C,EAAAC,EAAAC,cAACyC,EAAD,CACErC,aAAcgC,EAAKhC,aAAasC,KAAKN,GACrCzB,GAAI6B,EAAO7B,GACXgC,IAAKH,EAAO7B,GACZJ,IAAKiC,EAAOI,UAGhB,OACE9C,EAAAC,EAAAC,cAAC6C,EAAD,KACE/C,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAAA,OAAKW,GAAG,QACL,IADH,eAEe0B,KAAKtB,MAAMG,UACxBpB,EAAAC,EAAAC,cAAA,WAHF,kBAIkBqC,KAAKtB,MAAME,aAC3BnB,EAAAC,EAAAC,cAAA,YAEFF,EAAAC,EAAAC,cAAA,WACCY,EAAQ0B,WAxDCS,mBCLlBC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASvB,SAASwB,eAAe","file":"static/js/main.1967d4d3.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\" isclicked=\"false\" onClick={props.removeFriend}>\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.src} />\n      </div>\n      <div className=\"content\" />\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <h3 className=\"title\">\n      <span className=\"clicky\">YuGiOh! Clicky Game</span>\n      <div id=\"message\"> Try not to click the same card more than once!</div>\n      {}\n    </h3>\n  );\n}\n\nexport default Title;\n","//Importing components\nimport React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport yugiohs from \"./yugioh.json\";\n\nvar shuffle = require(\"shuffle-array\");\n\n//App class and initial states\nclass App extends Component {\n  state = {\n    yugiohs,\n    currentScore: 0,\n    highScore: 0\n  };\n\n  //Function for when card is clicked\n  removeFriend = event => {\n    let pickedcard = event.currentTarget;\n    let status = JSON.parse(pickedcard.getAttribute(\"isclicked\"));\n\n    //array of all cards\n    const allcards = document.querySelectorAll(\".card\");\n    console.log(allcards);\n\n    //Set score when card is picked\n    if (status === true) {\n      this.setState({ currentScore: 0 });\n      if (this.state.currentScore > this.state.highScore) {\n        this.setState({ highScore: this.state.currentScore });\n      }\n\n      //reset card clicked attribute\n      for (let i = 0; i < allcards.length; i++) {\n        allcards[i].setAttribute(\"isclicked\", \"false\");\n      }\n    }\n    //card has not been picked\n    else {\n      this.setState({ currentScore: this.state.currentScore + 1 });\n      pickedcard.setAttribute(\"isclicked\", \"true\");\n    }\n  };\n\n  // Map over this.state.yugioh and render a FriendCard component for each friend object\n  render() {\n    const friends = this.state.yugiohs.map(yugioh => (\n      <FriendCard\n        removeFriend={this.removeFriend.bind(this)}\n        id={yugioh.id}\n        key={yugioh.id}\n        src={yugioh.image}\n      />\n    ));\n    return (\n      <Wrapper>\n        <Title />\n        <div id=\"text\">\n          {\" \"}\n          High Score: {this.state.highScore}\n          <br />\n          Current Score: {this.state.currentScore}\n          <br />\n        </div>\n        <br />\n        {shuffle(friends)}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}